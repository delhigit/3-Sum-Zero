vector<vector<int> > Solution::threeSum(vector<int> &A)
{
    int n = A.size();
    sort(A.begin(), A.end());
    vector<vector<int>> result;
    
    for(int i = 0; i < n - 2; i++)
    {
        int start = i + 1;
        int end = n -1;
        
        while(start < end)
        {
            int sum = A[i] + A[start] + A[end];
            
            if(sum == 0)
            {
                vector<int> ans(3, 0);
                ans[0] = A[i];
                ans[1] = A[start];
                ans[2] = A[end];
                
                result.push_back(ans);
                
                while(start < end  && A[start] == ans[1])
                start++;
                
                while(start < end && A[start] == ans[2])
                end--;
            }
            
            else if(sum > 0)
            end--;
            
            else
            start++;
        }
        
        while(i + 1 < n && A[i] == A[i+1])
        i = i + 1;
    }
    
    return result;
}
